# unicorn configuration
shared_path = "<%= shared_path %>"
pid_file    = "#{shared_path}/system/pids/unicorn.pid"

working_directory "<%= current_path %>"
worker_processes <%= fetch(:unicorn_workers) %>
listen "#{shared_path}/system/sockets/unicorn.sock", :backlog => 64
timeout <%= fetch(:unicorn_timeout) %>

stdout_path "#{shared_path}/log/unicorn.log"
stderr_path "#{shared_path}/log/unicorn.log"

pid "#{shared_path}/system/pids/unicorn.pid"

preload_app true

before_fork do |server, worker|
  old_pid = "#{pid_file}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did the job for us
    end
  end
end
<% if defined? ActiveRecord::Base %>
after_fork do |server,worker|
  ActiveRecord::Base.establish_connection
end
<% end %>
